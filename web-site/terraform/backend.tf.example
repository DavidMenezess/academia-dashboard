# ========================================
# BACKEND REMOTO (S3) - OPCIONAL
# ========================================
# 
# Para usar backend remoto S3 (armazenar state na AWS):
# 1. Renomeie este arquivo para backend.tf
# 2. Crie um bucket S3 para o state
# 3. Crie uma tabela DynamoDB para locks
# 4. Execute: terraform init -migrate-state
#
# ATENÇÃO: Bucket S3 e DynamoDB podem gerar custos fora do Free Tier
# ========================================

# terraform {
#   backend "s3" {
#     # Nome do bucket S3 (deve ser único globalmente)
#     bucket = "academia-dashboard-terraform-state"
#     
#     # Caminho da chave no bucket
#     key = "academia-dashboard/terraform.tfstate"
#     
#     # Região do bucket
#     region = "us-east-1"
#     
#     # Criptografia
#     encrypt = true
#     
#     # Tabela DynamoDB para state locking
#     dynamodb_table = "terraform-state-lock"
#     
#     # Tags
#     tags = {
#       Name        = "Academia Dashboard Terraform State"
#       Environment = "Production"
#       ManagedBy   = "Terraform"
#     }
#   }
# }

# ========================================
# CRIAR RECURSOS PARA BACKEND (EXECUTAR UMA VEZ)
# ========================================
#
# 1. Criar bucket S3:
#
# aws s3api create-bucket \
#   --bucket academia-dashboard-terraform-state \
#   --region us-east-1
#
# aws s3api put-bucket-versioning \
#   --bucket academia-dashboard-terraform-state \
#   --versioning-configuration Status=Enabled
#
# aws s3api put-bucket-encryption \
#   --bucket academia-dashboard-terraform-state \
#   --server-side-encryption-configuration '{
#     "Rules": [
#       {
#         "ApplyServerSideEncryptionByDefault": {
#           "SSEAlgorithm": "AES256"
#         }
#       }
#     ]
#   }'
#
# 2. Criar tabela DynamoDB:
#
# aws dynamodb create-table \
#   --table-name terraform-state-lock \
#   --attribute-definitions AttributeName=LockID,AttributeType=S \
#   --key-schema AttributeName=LockID,KeyType=HASH \
#   --billing-mode PAY_PER_REQUEST \
#   --region us-east-1
#
# ========================================
# MIGRAR STATE LOCAL PARA S3
# ========================================
#
# 1. Renomear backend.tf.example para backend.tf
# 2. Executar: terraform init -migrate-state
# 3. Confirmar migração: yes
#
# ========================================
# CUSTOS
# ========================================
#
# S3:
# - Primeiros 5GB: Grátis (Free Tier permanente)
# - State geralmente < 1MB
#
# DynamoDB:
# - 25GB armazenamento: Grátis (Free Tier permanente)
# - 25 unidades leitura/escrita: Grátis
# - State lock usa pouquíssimo
#
# Total estimado: GRÁTIS (dentro do Free Tier permanente)
#
# ========================================




